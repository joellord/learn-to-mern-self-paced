"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[4180],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,b=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(b,c(c({ref:t},p),{},{components:n})):r.createElement(b,c({ref:t},p))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4233:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={},c="Connecting to the database",i={unversionedId:"mdb-express/connect-db",id:"mdb-express/connect-db",title:"Connecting to the database",description:"We'll be using the MongoClient class to connect to our database.",source:"@site/docs/7-mdb-express/3-connect-db.mdx",sourceDirName:"7-mdb-express",slug:"/mdb-express/connect-db",permalink:"/mern-workshop/docs/mdb-express/connect-db",draft:!1,editUrl:"https://github.com/mongodb-developer/mern-workshop/blob/main/docs/7-mdb-express/3-connect-db.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Adding data to MongoDB",permalink:"/mern-workshop/docs/mdb-express/add-data"},next:{title:"Retrieve all documents",permalink:"/mern-workshop/docs/mdb-express/find-all"}},s={},l=[],p={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"connecting-to-the-database"},"Connecting to the database"),(0,o.kt)("p",null,"We'll be using the ",(0,o.kt)("a",{parentName:"p",href:"https://mongodb.github.io/node-mongodb-native/api-generated/mongoclient.html"},"MongoClient")," class to connect to our database."),(0,o.kt)("p",null,"To do so, we'll create a new file called ",(0,o.kt)("inlineCode",{parentName:"p"},"utils/db.mjs"),". This file will contain all the logic related to our database."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/utils/db.mjs"',title:'"src/utils/db.mjs"'},'import { MongoClient } from "mongodb";\n\nconst connectionString = process.env.CONN_STRING || "";\nconst dbName = process.env.DB_NAME || "";\n\nconst client = new MongoClient(connectionString);\n\nlet conn;\ntry {\n  conn = await client.connect();\n} catch(e) {\n  console.error(e);\n}\n\nlet db = conn.db(dbName);\n\nexport default db;\n')),(0,o.kt)("p",null,"In there, you can see that we're using the ",(0,o.kt)("inlineCode",{parentName:"p"},"process.env")," object to get the connection string and the database name. For the purpose of this workshop, you could hard-code these values in this ",(0,o.kt)("inlineCode",{parentName:"p"},"db.mjs")," file."))}u.isMDXComponent=!0}}]);