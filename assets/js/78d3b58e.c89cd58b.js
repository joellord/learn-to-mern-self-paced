"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[9726],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,f=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:a,s[1]=c;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7957:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={},s="React states",c={unversionedId:"express-react/state",id:"express-react/state",title:"React states",description:"In React, we can store data in a component's state. The state is an object that contains the data we want to store. We can access the state using the useState hook.",source:"@site/docs/8-express-react/2-state.mdx",sourceDirName:"8-express-react",slug:"/express-react/state",permalink:"/learn-to-mern-self-paced/docs/express-react/state",draft:!1,editUrl:"https://github.com/mongodb-developer/learn-to-mern-self-paced/blob/main/docs/8-express-react/2-state.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/learn-to-mern-self-paced/docs/express-react/intro"},next:{title:"React useEffect",permalink:"/learn-to-mern-self-paced/docs/express-react/effect"}},i={},l=[],p={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"react-states"},"React states"),(0,a.kt)("p",null,"In React, we can store data in a component's state. The state is an object that contains the data we want to store. We can access the state using the ",(0,a.kt)("inlineCode",{parentName:"p"},"useState")," hook."),(0,a.kt)("p",null,"When the state of the component changes, it will trigger a re-render of the component. This means that the component will be rendered again, and the new state will be used to render the component."),(0,a.kt)("p",null,"Let's see an example. Say we want to create a counter. One could design a component that looks like this."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Counter() {\n  let count = 0;\n\n  handleCounterClick = () => {\n    count++;\n  }\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={handleCounterClick}>Increment</button>\n    </div>\n  );\n}\n")),(0,a.kt)("p",null,"This won't work in React. Instead, you'll need to declare the ",(0,a.kt)("inlineCode",{parentName:"p"},"count")," variable as a state. This can be done using the ",(0,a.kt)("inlineCode",{parentName:"p"},"useState")," hook. You will also need to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"setCount")," function to update the state."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Counter() {\n  let [count, setCount] = useState(0);\n\n  handleCounterClick = () => {\n    setCount(count + 1);\n  }\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={handleCounterClick}>Increment</button>\n    </div>\n  );\n}\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Exercise that muscle memory. Try to change the first example so that it now uses the ",(0,a.kt)("inlineCode",{parentName:"p"},"useState")," hook.")))}d.isMDXComponent=!0}}]);