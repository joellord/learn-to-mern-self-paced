"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[1253],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return n?o.createElement(h,i(i({ref:t},c),{},{components:n})):o.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:a,i[1]=p;for(var s=2;s<r;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8444:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var o=n(7462),a=(n(7294),n(3905));const r={},i="Routing",p={unversionedId:"advanced/router",id:"advanced/router",title:"Routing",description:"So far, we have a single page application that literally has a single page. Let's see how we can add multiple pages to our application.",source:"@site/docs/9-advanced/2-router.mdx",sourceDirName:"9-advanced",slug:"/advanced/router",permalink:"/learn-to-mern-self-paced/docs/advanced/router",draft:!1,editUrl:"https://github.com/mongodb-developer/learn-to-mern-self-paced/blob/main/docs/9-advanced/2-router.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/learn-to-mern-self-paced/docs/advanced/intro"},next:{title:"Using Forms",permalink:"/learn-to-mern-self-paced/docs/advanced/form"}},l={},s=[{value:"Installing React Router",id:"installing-react-router",level:2},{value:"Add a Router",id:"add-a-router",level:2},{value:"Creating a new page",id:"creating-a-new-page",level:2},{value:"Navigating to the new page",id:"navigating-to-the-new-page",level:2}],c={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"routing"},"Routing"),(0,a.kt)("p",null,"So far, we have a single page application that literally has a single page. Let's see how we can add multiple pages to our application."),(0,a.kt)("p",null,"Here, we'll want to create a new page that lists the details of one item from our database. We'll also want to be able to navigate to this page from our home page."),(0,a.kt)("h2",{id:"installing-react-router"},"Installing React Router"),(0,a.kt)("p",null,"React Router is a library that allows us to create multiple pages in our React application. It also allows us to navigate between these pages."),(0,a.kt)("p",null,"To install React Router, run the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install react-router-dom\n")),(0,a.kt)("h2",{id:"add-a-router"},"Add a Router"),(0,a.kt)("p",null,"To use React Router, we need to wrap our application in a ",(0,a.kt)("inlineCode",{parentName:"p"},"Router")," component. This component is imported from ",(0,a.kt)("inlineCode",{parentName:"p"},"react-router-dom"),". In the App.js file, we'll import this component and wrap our application in it."),(0,a.kt)("p",null,"We will then change the content of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Layout")," children based on the URL. We'll use the ",(0,a.kt)("inlineCode",{parentName:"p"},"Routes")," component to do this. This component takes a ",(0,a.kt)("inlineCode",{parentName:"p"},"path")," prop and an ",(0,a.kt)("inlineCode",{parentName:"p"},"element")," prop. The ",(0,a.kt)("inlineCode",{parentName:"p"},"path")," prop is the URL that we want to match. The ",(0,a.kt)("inlineCode",{parentName:"p"},"element")," prop is the content that we want to display when the URL matches the ",(0,a.kt)("inlineCode",{parentName:"p"},"path")," prop."),(0,a.kt)("p",null,"Note that we can use parametrized routes, just as we can in Express. We can use the ",(0,a.kt)("inlineCode",{parentName:"p"},":")," character to indicate a parameter. We can then access this parameter using the ",(0,a.kt)("inlineCode",{parentName:"p"},"useParams")," hook."),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Expand to see the code"),(0,a.kt)("div",null,(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/App.js"',title:'"src/App.js"'},'import { BrowserRouter as Router, Routes, Route } from \'react-router-dom\';\nimport Layout from \'./components/Layout\';\nimport Books from "./pages/Books";\nimport Book from "./pages/Book";\nimport \'./App.css\';\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        <Routes>\n          <Route path="/book/:bookId" element={<Book />} />\n          <Route path="/" element={<Books />} />\n        </Routes>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n')))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Here, we are importing a new component called ",(0,a.kt)("inlineCode",{parentName:"p"},"Book"),". We'll create this component in the next section.")),(0,a.kt)("h2",{id:"creating-a-new-page"},"Creating a new page"),(0,a.kt)("p",null,"Let's create a new page that will show the details of a single item. Using my bookshelf example, I'll call this page ",(0,a.kt)("inlineCode",{parentName:"p"},"pages/Book/index.jsx"),"."),(0,a.kt)("p",null,"This page uses ",(0,a.kt)("inlineCode",{parentName:"p"},"useState")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"useEffect")," to fetch the data for a single book from the database. It uses ",(0,a.kt)("inlineCode",{parentName:"p"},"useParams")," to get the ",(0,a.kt)("inlineCode",{parentName:"p"},"bookId")," from the URL. It then uses this ",(0,a.kt)("inlineCode",{parentName:"p"},"bookId")," to fetch the data for a single book from the database."),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Expand to see the code"),(0,a.kt)("div",null,(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/pages/Book/index.jsx"',title:'"src/pages/Book/index.jsx"'},"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction Book (props) {\n  const [book, setBook] = useState({});\n  const { bookId } = useParams();\n\n  useEffect(() => {\n    const fetchBook = async () => {\n      const response = await fetch(`http://localhost:5050/books/${bookId}`);\n      const data = await response.json();\n      setBook(data);\n    }\n    fetchBook();\n  }, [bookId]);\n\n  return (\n    <>\n      <h2>{book.title}</h2>\n\n      <p>Author: {book.author}</p>\n      <p>Description: {book.description}</p>\n      <p>Pages: {book.pages}</p>\n      <p>Read: {book.read ? 'Yes' : 'No'}</p>\n      {!book.read &&\n      <p>Current Page: {book.currentPage}</p>\n      }\n    </>\n  )\n}\n\nexport default Book;\n")))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"This component is very similar to our ",(0,a.kt)("inlineCode",{parentName:"p"},"Books/Book.jsx")," component. This is intentional. We'll change the latter in the next section.")),(0,a.kt)("h2",{id:"navigating-to-the-new-page"},"Navigating to the new page"),(0,a.kt)("p",null,"Now that we have a new page, you could try it out by navigating to ",(0,a.kt)("inlineCode",{parentName:"p"},"http://localhost:3000/book/<BOOK_ID>"),". However, you'll notice that there is no way to navigate to this page from the home page."),(0,a.kt)("p",null,"Let's add a link to the home page that will take us to the new page. We can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"Link")," component from ",(0,a.kt)("inlineCode",{parentName:"p"},"react-router-dom")," to do this. This component takes a ",(0,a.kt)("inlineCode",{parentName:"p"},"to")," prop that is the URL that we want to navigate to."),(0,a.kt)("p",null,"Let's change the ",(0,a.kt)("inlineCode",{parentName:"p"},"Books/Book.jsx")," component to use this ",(0,a.kt)("inlineCode",{parentName:"p"},"Link")," component, and only list the title and a link."),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Expand to see the code"),(0,a.kt)("div",null,(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/pages/Books/Book.jsx"',title:'"src/pages/Books/Book.jsx"'},'import React from "react";\nimport { Link } from "react-router-dom";\n\nconst Book = (props) => {\n  const { title, _id } = props;\n  return (\n    <div>\n      <h3>{title}</h3>\n      <Link to={`/book/${_id}`}>View Book</Link>\n    </div>\n  )\n}\n\nexport default Book;\n')))))}d.isMDXComponent=!0}}]);