"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[725],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>m});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var i=n.createContext({}),p=function(e){var t=n.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},c=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(o),d=r,m=u["".concat(i,".").concat(d)]||u[d]||h[d]||a;return o?n.createElement(m,l(l({ref:t},c),{},{components:o})):n.createElement(m,l({ref:t},c))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,l=new Array(a);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var p=2;p<a;p++)l[p]=o[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},5664:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=o(7462),r=(o(7294),o(3905));const a={},l="Solutions",s={unversionedId:"react/solution",id:"react/solution",title:"Solutions",description:"A little lazy, are you? Well, here are the solutions to the problems. At least, a possible solution. There are many ways to solve a problem, and these are just one of them.",source:"@site/docs/4-react/8-solution.mdx",sourceDirName:"4-react",slug:"/react/solution",permalink:"/mern-workshop/docs/react/solution",draft:!1,editUrl:"https://github.com/mongodb-developer/mern-workshop/blob/main/docs/4-react/8-solution.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Get Working!",permalink:"/mern-workshop/docs/react/get-working"},next:{title:"Node.js and Express",permalink:"/mern-workshop/docs/category/nodejs-and-express"}},i={},p=[{value:"App",id:"app",level:2},{value:"Layout",id:"layout",level:2},{value:"Header",id:"header",level:2},{value:"Footer",id:"footer",level:2},{value:"Books",id:"books",level:2},{value:"Book",id:"book",level:2}],c={toc:p},u="wrapper";function h(e){let{components:t,...o}=e;return(0,r.kt)(u,(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"solutions"},"Solutions"),(0,r.kt)("p",null,"A little lazy, are you? Well, here are the solutions to the problems. At least, a possible solution. There are many ways to solve a problem, and these are just one of them."),(0,r.kt)("p",null,"I like to start with the topmost parent, and work my way down so I can see the progress as I go. I also like to start with the layout, and then work my way down to the components. This is just a personal preference, and you can do it however you like."),(0,r.kt)("h2",{id:"app"},"App"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"App.js")," file is the topmost parent component. It is the component that will be rendered to the DOM. It is also the component that will hold all of the other components. This is the component that will be responsible for the layout of the page."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click here to see the code"),(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="/src/App.js"',title:'"/src/App.js"'},"import Layout from './components/Layout';\nimport Books from \"./pages/Books\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Layout>\n      <Books />\n    </Layout>\n  );\n}\n\nexport default App;\n")))),(0,r.kt)("h2",{id:"layout"},"Layout"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"components/Layout.jsx")," file is the component that will be responsible for the layout of the page. It will be the component that will hold the header and the footer. It will also be the component that will hold the main content of the page. Note how I'm using the ",(0,r.kt)("inlineCode",{parentName:"p"},"children")," prop to render the main content of the page."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click here to see the code"),(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="/src/components/Layout.jsx"',title:'"/src/components/Layout.jsx"'},'import React from "react";\nimport Header from "./Header";\nimport Footer from "./Footer";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <Header />\n      <main>{children}</main>\n      <Footer />\n    </>\n  );\n}\n\nexport default Layout;\n')))),(0,r.kt)("h2",{id:"header"},"Header"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"components/Header.jsx")," file is the component that will be responsible for the header of the page."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click here to see the code"),(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="/src/components/Header.jsx"',title:'"/src/components/Header.jsx"'},'import React from "react";\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>Sample Books</h1>\n    </header>\n  );\n}\n\nexport default Header;\n')))),(0,r.kt)("h2",{id:"footer"},"Footer"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"components/Footer.jsx")," file is the component that will be responsible for the footer of the page."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click here to see the code"),(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="/src/components/Footer.jsx"',title:'"/src/components/Footer.jsx"'},'import React from "react";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>(c) {new Date().getFullYear}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n')))),(0,r.kt)("h2",{id:"books"},"Books"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"pages/Books/index.jsx")," file is the component that will be responsible for the main content of the page. It will be the component that will hold the list of books. Note how I'm using a constant to hold the list of books. Eventually, this will be replaced with a call to an API."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click here to see the code"),(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="/src/pages/Books/index.jsx"',title:'"/src/pages/Books/index.jsx"'},'import React from "react";\n\nimport Book from "./Book";\n\nconst books = [\n  {\n    id: 0,\n    title: "The Alchemist",\n    author: "Paulo Coelho",\n    description: "A book about following your dreams",\n    pages: 163,\n    currentPage: 163,\n    read: true\n  },\n  {\n    id: 1,\n    title: "The Prophet",\n    author: "Kahlil Gibran",\n    description: "A story about a prophet",\n    pages: 107,\n    currentPage: 23,\n    read: false\n  },\n  {\n    id: 2,\n    title: "Thus Spoke Zarathustra",\n    author: "Friedrich Nietzsche",\n    description: "This book is about the fictitious travels and speeches of Zarathustra.",\n    pages: 352,\n    currentPage: 52,\n    read: false\n  }\n]\n\nconst Books = () => {\n  return (\n    <div>\n      <h2>Books</h2>\n      {books.map((book, index) => {\n        return (\n          <Book key={index} {...book} />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default Books;\n')))),(0,r.kt)("h2",{id:"book"},"Book"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"pages/Books/Book.jsx")," file is the component that will be responsible for displaying the information about a single book. Note how I'm using the spread operator to pass the properties of the book to the component."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click here to see the code"),(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="/src/pages/Books/Book.jsx"',title:'"/src/pages/Books/Book.jsx"'},'import React from "react";\n\nconst Book = (props) => {\n  const { title, author, description, pages, currentPage, read } = props;\n  return (\n    <div>\n      <h3>{title}</h3>\n      <p>Author: {author}</p>\n      <p>Description: {description}</p>\n      <p>Pages: {pages}, currentPage: {currentPage}, read: {read ? "Yes" : "No"}</p>\n    </div>\n  )\n}\n\nexport default Book;\n')))))}h.isMDXComponent=!0}}]);